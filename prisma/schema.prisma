// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique
  hash_password String
  projects      UserToProject[]
  Project       Project[]
}

model UserToProject {
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int

  @@id([userId, projectId])
}

model Project {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  owner       User            @relation(fields: [userOwnerId], references: [id])
  userOwnerId Int
  members     UserToProject[]
  Task        Task[]
}

model Task {
  id          Int         @id @default(autoincrement())
  title       String      @db.VarChar(255)
  description String?
  createdAt   DateTime    @default(now())
  status      String      @default("pending")
  project     Project     @relation(fields: [projectId], references: [id])
  projectId   Int
  TaskToTag   TaskToTag[]
}

model TaskToTag {
  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int
  task   Task @relation(fields: [taskId], references: [id])
  taskId Int

  @@id([tagId, taskId])
}

model Tag {
  id        Int         @id @default(autoincrement())
  title     String
  TaskToTag TaskToTag[]
}
